name: Pull Request Checks

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

jobs:
  lint-format:
    name: Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build workspace image
        run: |
          docker build -f Dockerfile.loci -t loci-workspace .

      - name: Install dependencies
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/loci \
            loci-workspace \
            sh -c "pnpm install --frozen-lockfile"

      - name: Run linting
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/loci \
            loci-workspace \
            sh -c "pnpm nx affected --target=lint"

      - name: Run format check
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/loci \
            loci-workspace \
            sh -c "pnpm nx affected --target=format"

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build workspace image
        run: |
          docker build -f Dockerfile.loci -t loci-workspace .

      - name: Install dependencies
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/loci \
            loci-workspace \
            sh -c "pnpm install --frozen-lockfile"

      - name: Run tests
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/loci \
            -e CI=true \
            loci-workspace \
            sh -c "pnpm nx affected --target=test"

  build:
    name: Build Verification
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build workspace image
        run: |
          docker build -f Dockerfile.loci -t loci-workspace .

      - name: Install dependencies
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/loci \
            loci-workspace \
            sh -c "pnpm install --frozen-lockfile"

      - name: Build all projects
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/loci \
            loci-workspace \
            sh -c "pnpm nx affected --target=build"
    
  docker-build:
    name: Docker Build Verification
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 24
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build all Docker images
        run: pnpm nx affected --target docker:build -- --target prod

  conventional-commits:
    name: Validate Conventional Commits
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Validate all commits follow conventional commits
        uses: wagoid/commitlint-github-action@v6
        with:
          failOnWarnings: true
          configFile: .commitlintrc.json
          helpURL: https://www.conventionalcommits.org

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [www]
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run E2E Tests for ${{ matrix.app }}
        run: docker compose -f docker-compose.prod.yaml --profile e2e up --exit-code-from ${{ matrix.app }}-e2e ${{ matrix.app }}-e2e
      - name: Upload Playwright results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results-${{ matrix.app }}
          path: apps/${{ matrix.app }}/test-results
          if-no-files-found: ignore
      - name: Teardown
        if: always()
        run: docker compose -f docker-compose.prod.yaml down -v || true

  all-checks-pass:
    name: All Checks Pass
    runs-on: ubuntu-latest
    needs: [lint-format, test, build, docker-build, conventional-commits, e2e-tests]
    if: always()

    steps:
      - name: Verify all checks passed
        if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
        run: |
          echo "One or more checks failed or were cancelled"
          exit 1

      - name: All checks passed
        run: echo "All PR checks passed successfully!"
